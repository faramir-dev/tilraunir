library(ggplot2)

# This function is stolen from: http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_%28ggplot2%29/ .
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)

  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

 if (numPlots==1) {
    print(plots[[1]])

  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

plot.6 <- function() {
	NEI <- readRDS("summarySCC_PM25.rds")
	SCC <- readRDS("Source_Classification_Code.rds")

	scc <- data.frame(name=paste(SCC$Short.Name, SCC$EI.Sector, SCC$SCC.Level.One, SCC$SCC.Level.Two, SCC$SCC.Level.Three, SCC$SCC.Level.Four), scc=SCC$SCC)
	sources <- as.character( scc$scc[ intersect(grep('motor|gasoline|diesel', scc$name, ignore.case=TRUE),
						    grep('vehicle|\bveh\b|\bcar\b', scc$name, ignore.case=TRUE, perl=TRUE))] )

	# We want only items from motor vehicle sources.
	NEI <- NEI[NEI$SCC %in% sources,]
	#NEI <- NEI[NEI$type == 'ON-ROAD', ]

	# We want only items for Baltimore city and Los Angeles County.
	NEI <- NEI[NEI$fips %in% c('24510', '06037'),]

	# Add name of the city
	NEI$City <- ifelse(NEI$fips == '24510', 'Baltimore City', 'Los Angeles County')

	NEI.Baltimore <- NEI[NEI$fips == '24510',]
	NEI.LosAngelesCounty <- NEI[NEI$fips == '06037',]

	dt.Baltimore <- aggregate(Emissions ~ year, data=NEI.Baltimore, FUN=sum)
	dt.LosAngelesCounty <- aggregate(Emissions ~ year, data=NEI.LosAngelesCounty, FUN=sum)

	y.size <- max(max(dt.Baltimore$Emissions) - min(dt.Baltimore$Emissions),
		      max(dt.LosAngelesCounty) - min(dt.LosAngelesCounty$Emissions))
	y.size <- 1.1*y.size
	min.Baltimore <- min(dt.Baltimore$Emissions)
	min.LosAngelesCounty <- min(dt.LosAngelesCounty$Emissions)
	limits.Baltimore <- c(min.Baltimore, min.Baltimore + y.size)
	limits.LosAngelesCounty <- c(min.LosAngelesCounty, min.LosAngelesCounty + y.size)

	plot.Baltimore <- ggplot(dt.Baltimore, aes(x=year, y=Emissions, group=1)) + geom_point(stat = 'identity', size = 2) + geom_line() +
		scale_x_continuous(name='Year') +
		scale_y_continuous(name='Emissions (tons)', limits=limits.Baltimore)

	plot.LosAngelesCounty <- ggplot(dt.LosAngelesCounty, aes(x=year, y=Emissions, group=1)) + geom_point(stat = 'identity', size = 2) + geom_line() +
		scale_x_continuous(name='Year')
		scale_y_continuous(name='', limits=limits.LosAngelesCounty)
	


	multiplot(plot.Baltimore, plot.LosAngelesCounty, cols=2)
	ggsave('plot6.png', width=8, height=12)
}

plot.6()
